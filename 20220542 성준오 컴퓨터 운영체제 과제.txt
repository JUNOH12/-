20220542 성준오 컴퓨터 운영체제 과제



#include <pthread.h>
#include <stdio.h>
#include <stdlib.h>

#define NUM_THREADS 4
#define MAX_NUMBER 40000

// 전역 변수: 0으로 초기화된 sum 배열
int sum[NUM_THREADS] = {0};

// 각 스레드에 전달할 데이터 구조체
typedef struct {
    int id;     // 스레드 번호 (0~3)
    int start;  // 합산 시작 값
    int end;    // 합산 종료 값
} ThreadData;

// 스레드로 실행할 함수 runner
void* runner(void* arg) {
    ThreadData *data = (ThreadData *) arg;
    for (int i = data->start; i <= data->end; i++) {
        sum[data->id] += i;
    }
    pthread_exit(0);
}

int main() {
    pthread_t threads[NUM_THREADS];
    ThreadData threadData[NUM_THREADS];
    int segment = MAX_NUMBER / NUM_THREADS;
    int total = 0;

    // 4개의 스레드를 순차적으로 생성하여 동시에 실행
    for (int i = 0; i < NUM_THREADS; i++) {
        threadData[i].id = i;
        threadData[i].start = i * segment + 1;
        threadData[i].end = (i + 1) * segment;
        if (pthread_create(&threads[i], NULL, runner, (void*)&threadData[i]) != 0) {
            fprintf(stderr, "스레드 %d 생성 오류\n", i);
            exit(1);
        }
    }

    // 메인 스레드는 4개의 스레드가 모두 종료될 때까지 대기
    for (int i = 0; i < NUM_THREADS; i++) {
        pthread_join(threads[i], NULL);
    }

    // 전역 sum 배열의 값을 모두 합산하여 결과 출력
    for (int i = 0; i < NUM_THREADS; i++) {
        total += sum[i];
    }
    printf("1부터 40000까지의 합: 800020000)
}
